/*
Алгоритм поиска
важность: 5
Задача состоит из двух частей.

У нас есть объекты:
*/
let head = {
  glasses: 1,
};

let table = {
  pen: 3,
};

let bed = {
  sheet: 1,
  pillow: 2,
};

let pockets = {
  money: 2000,
};
/*
С помощью свойства __proto__ задайте прототипы так, чтобы поиск любого свойства выполнялся 
по следующему пути: pockets → bed → table → head. Например, pockets.pen должно возвращать 
значение 3 (найденное в table), а bed.glasses – значение 1 (найденное в head).
Ответьте на вопрос: как быстрее получить значение glasses – через pockets.glasses или 
через head.glasses? При необходимости составьте цепочки поиска и сравните их.
*/

pockets.__proro__ = bed;
bed.__proto__ = table;
table.__proro__ = head;

// ? head.glasses должен вернуть результат быстрее так как мы напрямую обращаемся к свойству
// ? а не ищем в цепочке прототипов:
// ? pockets.glasses(отсутствует) -> bed.glasses(отсутствует) -> table.glasses(отсутствует) -> head.glasses(найдено)
// ! однако современные движки оптимизируют поиск таким образом что при повторном запросе
// ! доступ к свойству будет предоставлен так же быстро через внутренний кэш
